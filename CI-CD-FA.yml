name: CD
run-name: Deploy Any Environment

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      runner_name:
        type: string
        required: true
      azure_publish_profile:
        type: string
        required: true
      function_name:
        type: string
        required: true
      function_package_path:
        type: string
        required: true

  workflow_dispatch:

  # Environment variables available to all jobs and steps in this workflow
env:
  FUNCTION_APP_NAME: ${{ inputs.function_name }}
  PUBLISH_PROFILE: ${{secrets[inputs.azure_publish_profile]}}
  AZURE_FUNCTIONAPP_PACKAGE_PATH: ${{ inputs.function_package_path }} #'./src/Rsi.TenantManagement.EventFunction' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x' # set this to the dotnet version to use

# A workflow run is made up of one or more jobs
jobs:
  build-push-deploy:
    runs-on: ${{ inputs.runner_name }}
    environment: ${{ inputs.environment_name }}
    steps:
      - name: Clean up working directory
        uses: AutoModality/action-clean@v1
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Add nuget source'
        run: dotnet nuget add source --username USERNAME --password ${{ secrets.NUGET_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/revenue-solutions-inc/index.json"
        continue-on-error: true

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: '${{ env.FUNCTION_APP_NAME }}'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ env.PUBLISH_PROFILE }}
